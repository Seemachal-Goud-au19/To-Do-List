{"version":3,"sources":["Components-todolist/Input.js","App.js","reportWebVitals.js","index.js"],"names":["Input","useState","input","setInput","store","setStore","id","setId","toggle","setToggle","AddList","saveitem","map","val","idx","className","type","value","onChange","e","target","onClick","element","newStore","filter","index","Delete","edititem","find","Edit","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TA8FeA,EArFD,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACXC,EADW,KACJC,EADI,OAEQF,mBAAS,IAFjB,mBAEXG,EAFW,KAEJC,EAFI,OAGEJ,qBAHF,mBAGXK,EAHW,KAGPC,EAHO,OAIUN,oBAAS,GAJnB,mBAIXO,EAJW,KAIHC,EAJG,KAMZC,EAAU,WACd,GAAIR,IAAUM,EACZH,EAAS,GAAD,mBAAKD,GAAL,CAAYF,KACpBC,EAAS,SACJ,GAAIK,EAAQ,CACjB,IAAIG,EAAWP,EAAMQ,KAAI,SAACC,EAAKC,GAI7B,OAHIA,IAAQR,IACVO,EAAMX,GAEDW,KAGTR,EAASM,GACTR,EAAS,IACTM,GAAU,KAwBd,OACE,sBAAKM,UAAU,OAAf,UACA,sBAAKA,UAAU,QAAf,UACA,uBACIC,KAAK,OACLC,MAAOf,EACPgB,SAAU,SAACC,GACThB,EAASgB,EAAEC,OAAOH,UAGpBT,EACA,cAAC,IAAD,CAAUO,UAAU,OAAOM,QAASX,IAD3B,cAAC,IAAD,CAAeK,UAAU,OAAOM,QAASX,OAOnDN,EAAMQ,KAAI,SAACU,EAASR,GACnB,OACE,mCACE,sBAAMC,UAAU,OAAhB,UACE,4BAAIO,IACJ,cAAC,IAAD,CAAmBP,UAAU,OAC3BM,QAAS,YA3CR,SAACP,GACd,IAAMS,EAAWnB,EAAMoB,QAAO,SAACX,EAAKY,GAAN,OAAgBA,GAASX,KACvDT,EAAS,YAAIkB,IA0CCG,CAAOZ,MAGX,cAAC,IAAD,CAAUC,UAAU,OAClBM,QAAS,YA3CV,SAACP,GACZ,IAAIa,EAAWvB,EAAMwB,MAAK,SAACf,EAAKY,GAC9B,GAAIA,IAAUX,EACZ,OAAOD,KAGXN,EAAMO,GACNX,EAASwB,GACTlB,GAAU,GAoCIoB,CAAKf,QATiBA,QAgBlC,wBAASC,UAAU,SAASM,QAxCjB,WACbhB,EAAS,KAuCP,4BC5ESyB,MATf,WACE,OACE,sBAAKf,UAAU,MAAf,UACA,uDACC,cAAC,EAAD,QCIUgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ebc132d1.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport React from \"react\";\r\nimport \"./TodoList.css\"\r\n\r\n\r\nconst Input = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [store, setStore] = useState([]);\r\n  const [id, setId] = useState();\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const AddList = () => {\r\n    if (input && !toggle) {\r\n      setStore([...store, input]);\r\n      setInput(\"\");\r\n    } else if (toggle) {\r\n      let saveitem = store.map((val, idx) => {\r\n        if (idx === id) {\r\n          val = input;\r\n        }\r\n        return val;\r\n      });\r\n\r\n      setStore(saveitem);\r\n      setInput(\"\");\r\n      setToggle(false)\r\n    }\r\n  };\r\n\r\n  const Delete = (idx) => {\r\n    const newStore = store.filter((val, index) => index != idx);\r\n    setStore([...newStore]);\r\n  };\r\n\r\n  const Edit = (idx) => {\r\n    let edititem = store.find((val, index) => {\r\n      if (index === idx) {\r\n        return val;\r\n      }\r\n    });\r\n    setId(idx);\r\n    setInput(edititem);\r\n    setToggle(true);\r\n  };\r\n\r\n  const Remove = () => {\r\n    setStore([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n    <div className=\"input\">\r\n    <input \r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => {\r\n          setInput(e.target.value);\r\n        }}\r\n      />\r\n      {!toggle ?(<AddCircleIcon className=\"icon\" onClick={AddList} />):\r\n      ( <SaveIcon className=\"icon\" onClick={AddList} />)}\r\n     \r\n\r\n    </div>\r\n     \r\n     \r\n      {store.map((element, idx) => {\r\n        return (\r\n          <>\r\n            <div  className=\"list\" key={idx}>\r\n              <p>{element}</p>\r\n              <DeleteForeverIcon className=\"icon\"\r\n                onClick={() => {\r\n                  Delete(idx);\r\n                }}\r\n              />\r\n              <EditIcon className=\"icon\"\r\n                onClick={() => {\r\n                  Edit(idx);\r\n                }}\r\n              />\r\n            </div>\r\n          </>\r\n        );\r\n      })}\r\n      <button  className=\"remove\" onClick={Remove}>Remove All</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","\nimport './App.css';\nimport Input from \"./Components-todolist/Input\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <h2 >Add Task To Your List</h2>\n     <Input/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}